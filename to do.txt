TO DO:

IMPROVEMENTS
- Make the transform finding into a factory pattern
- Change the orientation and position to quaterniond and vector3d from their float variants.(FUCK!!!)

FEATURE IMPLEMENTATION
- Move transforms to local Pose Struct
- Tracking and initial map formation
- Local BA

POSSIBILITIES FOR TRANSFORM FINDING
- Plain + Color ICP(Steinbrucker et al)
- Zhang ICP(I suspect this is a deconstructed version of ICP which scales for even just cameras)
- GICP
- GICP6D

POTENTIAL BUGS/QUESTIONS
- Figure out why unit quaternion rotate pt doesn't work in ICP and quaternion
rotate pt. does.
- How to potentially fuse map points or the associate map points across multiple frames

CLASS PLANNING
- BundleAdjustment - The bundle adjustment g2o optimization/wrapper
- LocalMapping - Bundle Adjustment Controller/Manager, Insertion into co-visibility graph and pose graph if they are eventually separate
- PoseGraphOptimization - The pose graph g2o optimization/wrapper
- LoopClosing - Pose Graph Optimization Controller/Manager
- Map - The map struct
- CovisibilityGraph - Maintains co-visibility network of frames

REPOSITORY PLANNING
- Separate the base data structures into the components/underlying slam structures.
- Separate the concurrent queues/safe queues into common/common utils.

FLOW PLANNING
- New frame comes in, track initializes frame and mappoints and uses odometry to compute pose, passes to local mapping, local mapping creates/refines point/frame associations runs bundle adjustment, passes to loopclosing thread which runs loop closing/maybe global bundle adjustment.
